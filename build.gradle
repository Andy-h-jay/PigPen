// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://clojars.org/repo' }
    }
    dependencies {
        classpath 'clojuresque:clojuresque:1.7.0'
    }
    apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
    repositories { 
        mavenCentral() // maven { url: 'http://jcenter.bintray.com' }
	    maven { url 'http://clojars.org/repo' }
    }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')
apply from: file('gradle/release.gradle')

subprojects {

	group = 'com.netflix.pigpen'
	
	license {
	    mapping('clj', 'SEMICOLON_STYLE')
	}
	
	apply plugin: 'clojure'
	tasks.uberjar.enabled=true
	clojure.aotCompile = true
	
	compileClojure {
	    classpath = project.files(
	        project.compileJava.outputs,
	        classpath
	    )
	}

	clojureTest {
	    // this is here because pig and hadoop are provided dependencies
	    // without this, clojureTest doesn't work
	    classpath = sourceSets.test.runtimeClasspath
	}
	
	clojuredoc {
	    includeNamespace 'pigpen.core'
	    includeNamespace 'pigpen.fold'
	    codox = [
	        srcDirUri: 'https://github.com/Netflix/PigPen/blob/master/',
	        srcLinenumAnchorPrefix: 'L'
	    ]
	}
	
	javadoc {
	    // this is here because pig and hadoop are provided dependencies
	    // without this, javadoc doesn't work
	    classpath = sourceSets.test.runtimeClasspath
	}
	
	apply plugin: 'eclipse'
	eclipse {
	    // this is here because pig and hadoop are provided dependencies
	    // without this, counterclockwise doesn't work
	    classpath {
	    	plusConfigurations += configurations.provided
	    }
	}
}

